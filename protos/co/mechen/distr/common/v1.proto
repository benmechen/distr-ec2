syntax = "proto3";

package co.mechen.distr.common.v1;

message Value {
    oneof value {
        string string_value = 1;
        double number_value = 2;
        bool bool_value = 3;
        Struct struct_value = 4;
    };
}

message Struct {
    map<string, Value> fields = 1;
}

message InputField {
    string name = 1;
    optional string description = 2;
    optional Value default_value= 3;
    enum Type {
        STRING = 0;
        NUMBER = 1;
        BOOLEAN = 2;
        STRUCT = 3;
    }
    Type type = 4;
    map<string, InputField> fields = 5;
}

message Input {
    string name = 1;
    Value value = 2;
}

enum Method {
    CREATE = 0;
    UPDATE = 1;
    DELETE = 2;
}

message ReflectMethodRequest {
    Method method = 1;
}

message ReflectMethodResponse {
    Method method = 1;
    repeated InputField inputs = 2;
}

// API Credentials
message AWSCredentials {
    string id = 1;
    string secret = 2;
}

message AzureCredentials {
    string tenant_id = 1;
    string client_id = 2;
    string secret = 3;
}

message OtherCredentials {
    map<string, string> values = 1;
}

message Credentials {
    optional AWSCredentials aws = 1;
    optional AzureCredentials azure = 2;
    optional OtherCredentials other = 3;
}

// Methods
message CreateRequest {
    Credentials credentials = 1;
    repeated Input payload = 2;
}

message CreateResponse {
    bool status = 1;
}