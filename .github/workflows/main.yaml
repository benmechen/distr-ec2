name: Main
on:
    push:
        branches:
            - main
        # Allows you to run this workflow manually from the Actions tab
        workflow_dispatch:

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    format-lint:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: bahmutov/npm-install@v1

            - name: Format
              run: npm run format

            - name: Lint
              run: npm run lint
    unit-test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: bahmutov/npm-install@v1

            - name: Run Unit Tests
              run: npm run test:ci
    # integration-test:
    #     runs-on: ubuntu-latest
    #     steps:
    #         - uses: actions/checkout@v2
    #         - uses: bahmutov/npm-install@v1

    #         - uses: nelonoel/branch-name@v1
    #           env:
    #               ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    #         - name: Get region
    #           run: |
    #               if [ ${{ env.BRANCH_NAME }} = "master" ]; then
    #               echo "AWS_SECRETS_REGION=${{ env.AWS_PROD_REGION }}" >> $GITHUB_ENV
    #               else
    #               echo "AWS_SECRETS_REGION=${{ env.AWS_STAGING_REGION }}" >> $GITHUB_ENV
    #               fi

    #         - name: Get secret
    #           run: |
    #               if [ ${{ env.BRANCH_NAME }} = "master" ]; then
    #               echo "AWS_SECRETS_NAME=${{ env.AWS_SECRETS_PROD }}" >> $GITHUB_ENV
    #               else
    #               echo "AWS_SECRETS_NAME=${{ env.AWS_SECRETS_STAGING }}" >> $GITHUB_ENV
    #               fi

    #         - name: Store ENV from AWS SecretManager
    #           uses: say8425/aws-secrets-manager-actions@v2
    #           with:
    #               AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #               AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #               AWS_DEFAULT_REGION: ${{ env.AWS_SECRETS_REGION }}
    #               SECRET_NAME: ${{ env.AWS_SECRETS_NAME }}
    #               OUTPUT_PATH: '.env' # optional

    #         - name: Run Integration Tests
    #           run: npm run test:e2e:docker

    #         - name: Clean up
    #           run: docker-compose down
    build:
        runs-on: ubuntu-latest
        needs: [format-lint, unit-test, integration-test]
        if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/staging')
        permissions:
            contents: read
            packages: write
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Log in to the Container registry
              uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

            - name: Build and push Docker image
              uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
              with:
                  context: .
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
